import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../../../core/config/dependencies.dart';
import '../model/doctor.dart';

class AddDoctorFormView extends ConsumerWidget {
  const AddDoctorFormView({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final GlobalKey<FormState> formKey = GlobalKey<FormState>();
    final TextEditingController nameController = TextEditingController();
    final TextEditingController specializationController =
        TextEditingController();
    final TextEditingController contactNumberController =
        TextEditingController();
    final TextEditingController emailController = TextEditingController();
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Form(
        key: formKey,
        child: Column(
          spacing: 16.0,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Add New Doctor',
              style: Theme.of(context).textTheme.headlineLarge,
            ),
            const Divider(),
            const Text('Fill in the details below to add a new doctor.'),
            const SizedBox(height: 16.0),
            TextFormField(
              controller: nameController,
              decoration: InputDecoration(labelText: 'Doctor Name'),
            ),
            TextFormField(
              controller: specializationController,
              decoration: InputDecoration(labelText: 'Specialization'),
            ),
            TextFormField(
              controller: contactNumberController,
              decoration: InputDecoration(labelText: 'Contact Number'),
            ),
            TextFormField(
              controller: emailController,
              decoration: InputDecoration(labelText: 'Email Address'),
            ),
            ElevatedButton(
              onPressed: () {
                if (formKey.currentState?.validate() ?? false) {
                  final doctor = Doctor(
                    id: '', // ID will be generated by Firestore
                    name: nameController.text,
                    specialty: specializationController.text,
                    phoneNumber: contactNumberController.text,
                    email: emailController.text,
                  );
                  ref.read(doctorControllerProvider).addDoctor(doctor).then((
                    result,
                  ) {
                    if (!context.mounted) return; // Guard with mounted check
                    if (result.isSuccess) {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(
                          content: Text(
                            'Doctor ${doctor.name} added successfully!',
                          ),
                        ),
                      );
                    } else {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(content: Text('Error: ${result.errorMessage}')),
                      );
                    }
                  });
                  // Clear the form fields after submission
                  formKey.currentState?.reset();
                }
              },
              child: const Text('Add Doctor'),
            ),
          ],
        ),
      ),
    );
  }
}
