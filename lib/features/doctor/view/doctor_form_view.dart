import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../../../core/config/dependencies.dart';
import '../model/doctor.dart';

class AddDoctorForm extends ConsumerWidget {
  const AddDoctorForm({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final GlobalKey<FormState> formKey = GlobalKey<FormState>();
    final TextEditingController nameController = TextEditingController();
    final TextEditingController specializationController =
        TextEditingController();
    final TextEditingController contactNumberController =
        TextEditingController();
    final TextEditingController emailController = TextEditingController();
    return Form(
      key: formKey,
      child: Column(
        spacing: 16.0,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Add New Doctor',
            style: Theme.of(context).textTheme.headlineLarge,
          ),
          const Divider(),
          const Text('Fill in the details below to add a new doctor.'),
          const SizedBox(height: 16.0),
          TextFormField(
            controller: nameController,
            decoration: InputDecoration(labelText: 'Doctor Name'),
          ),
          TextFormField(
            controller: specializationController,
            decoration: InputDecoration(labelText: 'Specialization'),
          ),
          TextFormField(
            controller: contactNumberController,
            decoration: InputDecoration(labelText: 'Contact Number'),
          ),
          TextFormField(
            controller: emailController,
            decoration: InputDecoration(labelText: 'Email Address'),
          ),
          ElevatedButton(
            onPressed: () {
              if (formKey.currentState?.validate() ?? false) {
                // Handle form submission
                ref
                    .read(doctorControllerProvider)
                    .addDoctor(
                      Doctor(
                        id: '', // ID will be generated by Firestore
                        name: nameController.text,
                        specialty: specializationController.text,
                        phoneNumber: contactNumberController.text,
                        email: emailController.text,
                        isAvailable: true,
                      ),
                    )
                    .then((_) {
                      // Clear the form or show success message
                      formKey.currentState?.reset();
                    })
                    .catchError((error) {
                      // Handle error
                      ScaffoldMessenger.of(
                        context,
                      ).showSnackBar(SnackBar(content: Text('Error: $error')));
                    });

                ScaffoldMessenger.of(context).showSnackBar(
                  const SnackBar(content: Text('Doctor added successfully!')),
                );
              }
            },
            child: const Text('Add Doctor'),
          ),
        ],
      ),
    );
  }
}
